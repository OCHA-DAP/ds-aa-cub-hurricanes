name: Observational Monitor

on:
  workflow_dispatch:
      inputs:
        TEST_EMAIL:
          required: true
          type: choice
          default: "true"
          options:
            - "true"
            - "false"
        DRY_RUN:
          required: true
          type: choice
          default: "false"
          options:
            - "true"
            - "false"
        FORCE_ALERT:
          required: true
          type: choice
          default: "false"
          options:
            - "true"
            - "false"
  schedule:
    - cron: '15 17 * * *' # Start at 5:15 PM UTC daily

jobs:
  run-script:
    runs-on: ubuntu-latest
    env:
      DSCI_AZ_BLOB_DEV_SAS: ${{ secrets.DSCI_AZ_BLOB_DEV_SAS }}
      DSCI_AZ_BLOB_DEV_SAS_WRITE: ${{ secrets.DSCI_AZ_BLOB_DEV_SAS_WRITE }}
      DSCI_AZ_BLOB_PROD_SAS: ${{ secrets.DSCI_AZ_BLOB_PROD_SAS }}
      DSCI_AWS_EMAIL_HOST: ${{ secrets.DSCI_AWS_EMAIL_HOST }}
      DSCI_AWS_EMAIL_PORT: ${{ secrets.DSCI_AWS_EMAIL_PORT }}
      DSCI_AWS_EMAIL_PASSWORD: ${{ secrets.DSCI_AWS_EMAIL_PASSWORD }}
      DSCI_AWS_EMAIL_USERNAME: ${{ secrets.DSCI_AWS_EMAIL_USERNAME }}
      DSCI_AWS_EMAIL_ADDRESS: ${{ secrets.DSCI_AWS_EMAIL_ADDRESS }}
      TEST_EMAIL: ${{ inputs.TEST_EMAIL || 'true' }}
      DRY_RUN: ${{ inputs.DRY_RUN || 'false' }}
      FORCE_ALERT: ${{ inputs.FORCE_ALERT || 'false' }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        ref: init-email-monitoring

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11.4'
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install -e .
        python -m pip install -r requirements.txt

    - name: Run script
      run: |
        python pipelines/02_update_obsv_monitor.py